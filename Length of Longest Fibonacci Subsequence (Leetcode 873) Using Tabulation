class Solution {
    public int lenLongestFibSubseq(int[] arr) {
        int n = arr.length;
        Map<Integer , Integer> map = new HashMap<>();
        for(int i = 0; i < arr.length; i++) {
           map.put(arr[i] , i);
        }
        int[][] dp = new int[n][n];
        for(int[] num : dp)
           Arrays.fill(num , 2);
        int maxi = 0;
        for(int j = 1; j < arr.length; j++) {
            for(int k = j + 1; k < arr.length; k++) {
                int i = arr[k] - arr[j];
                if(map.containsKey(i) && map.get(i) < j) {
                   dp[j][k] = 1 + dp[map.get(i)][j];
                }
                maxi = Math.max(maxi , dp[j][k]);
            }
        }
        return (maxi >= 3) ? maxi : 0;
    }
}
